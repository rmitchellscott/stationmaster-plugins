name: build-docker

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
      - 'v*.*'
      - 'v*.*.*-*'

jobs:

  build:
    name: Build ${{ matrix.platform }}
    strategy:
      matrix:
        include:
          - platform: amd64
            runs-on: ubuntu-24.04
          - platform: arm64
            runs-on: ubuntu-24.04-arm
    runs-on: ${{ matrix.runs-on }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/rmitchellscott/stationmaster-plugins
          flavor: |
            suffix=-${{ matrix.platform }}
          tags: |
            # commit short SHA for platform-specific images
            type=sha

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Platform Image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          pull: true
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=build-${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=build-${{ matrix.platform }}
          build-args: |
            VERSION=${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            GIT_COMMIT=${{ github.sha }}
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}

  merge:
    name: Create Multi-Arch Manifest
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/rmitchellscott/stationmaster-plugins
          tags: |
            # branch-based tags (e.g. 'main')
            type=ref,event=branch

            # mirror git tag (e.g. 'v1.2.3')
            type=ref,event=tag

            # semver without the 'v' (e.g. '1.2.3')
            type=semver,pattern={{version}}

            # major.minor (e.g. '1.2')
            type=semver,pattern={{major}}.{{minor}}

            # major only (e.g. '1')
            type=semver,pattern={{major}}

            # latest on main (stable releases only, not pre-releases)
            type=raw,priority=1000,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') && !contains(github.ref, '-') }}

            # commit short SHA
            type=sha

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get SHA for platform images
        id: sha_meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/rmitchellscott/stationmaster-plugins
          flavor: |
            suffix=-amd64
          tags: |
            type=sha

      - name: Create Multi-Arch Manifest
        run: |
          # Extract base SHA tag (without platform suffix)
          SHA_TAG=$(echo "${{ steps.sha_meta.outputs.tags }}" | sed 's/-amd64$//')
          
          # Create multi-arch manifests for each tag
          echo "${{ steps.meta.outputs.tags }}" | while read -r tag; do
            [[ -n "$tag" ]] && docker buildx imagetools create -t "${tag}" \
              "${SHA_TAG}-amd64" \
              "${SHA_TAG}-arm64"
          done
