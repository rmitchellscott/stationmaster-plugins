name: build-docker

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
      - 'v*.*'
      - 'v*.*.*-*'

jobs:

  build:
    name: Build Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/rmitchellscott/stationmaster-plugins
          tags: |
            # branch-based tags (e.g. 'main')
            type=ref,event=branch

            # mirror git tag (e.g. 'v1.2.3')
            type=ref,event=tag

            # semver without the 'v' (e.g. '1.2.3')
            type=semver,pattern={{version}}

            # major.minor (e.g. '1.2')
            type=semver,pattern={{major}}.{{minor}}

            # major only (e.g. '1')
            type=semver,pattern={{major}}

            # latest on main (stable releases only, not pre-releases)
            type=raw,priority=1000,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') && !contains(github.ref, '-') }}

            # commit short SHA
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          pull: true
          push: true
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            GIT_COMMIT=${{ github.sha }}
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
